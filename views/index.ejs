<!DOCTYPE html>
<html lang="id">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>
        <%= title %> | API Documentation
    </title>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap"
        rel="stylesheet">
    <script src="https://cdn.tailwindcss.com"></script>
    <script>
        tailwind.config = {
            theme: {
                extend: {
                    colors: {
                        'rgb-primary': '#2E3440',
                        'rgb-secondary': '#3B4252',
                        'rgb-accent': '#88C0D0',
                        'rgb-text': '#ECEFF4'
                    },
                    fontFamily: {
                        'poppins': ['Poppins', 'sans-serif']
                    }
                },
            },

        } 
    </script>
</head>

<body class="bg-rgb-primary text-rgb-text font-poppins min-h-screen">
    <!-- Header -->
    <header class="bg-rgb-secondary shadow-lg">
        <div class="container mx-auto px-4 py-6">
            <nav class="flex justify-between items-center">
                <a href="/" class="text-2xl font-bold text-rgb-accent">API Docs</a>
                <div class="flex space-x-4">
                    <a href="https://github.com/yourusername/project"
                        class="text-rgb-text hover:text-rgb-accent transition-colors">
                        GitHub
                    </a>
                </div>
            </nav>
        </div>
    </header>

    <!-- Main Content -->
    <main class="container mx-auto px-4 py-8">
        <!-- Hero Section -->
        <div class="text-center mb-12 space-y-4">
            <h1
                class="text-4xl font-bold bg-gradient-to-r from-blue-500 via-purple-500 to-pink-500 bg-clip-text text-transparent">
                API Scraper Documentation
            </h1>
            <p class="text-gray-400">Dokumentasi API untuk berbagai layanan scraping</p>
        </div>

        <!-- Search Bar -->
        <div class="mb-8">
            <div class="relative max-w-xl mx-auto">
                <input type="text" placeholder="Cari endpoint..."
                    class="w-full px-4 py-2 bg-rgb-secondary rounded-lg focus:outline-none focus:ring-2 focus:ring-rgb-accent text-rgb-text"
                    id="searchInput" onkeyup="filterEndpoints()">
                <div class="absolute right-3 top-2.5 text-gray-400">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24"
                        stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                            d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
                    </svg>
                </div>
            </div>
        </div>

        <!-- Endpoints Grid -->
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6" id="endpointsContainer">
            <% endpoints.forEach(endpoint=> { %>
                <div
                    class="endpoint-card bg-rgb-secondary p-6 rounded-xl hover:shadow-lg transition-all duration-300 hover:scale-105 hover:bg-opacity-80">
                    <div class="flex items-center space-x-3 mb-4">
                        <div class="w-10 h-10 rounded-full <%= endpoint.bgColor %> flex items-center justify-center">
                            <%- endpoint.icon %>
                        </div>
                        <h3 class="text-xl font-semibold">
                            <%= endpoint.name %>
                        </h3>
                    </div>
                    <div class="space-y-3">
                        <div class="flex items-center space-x-2">
                            <span class="px-2 py-1 bg-green-500 text-xs rounded-full">GET</span>
                            <div class="flex-1 flex items-center">
                                <code class="text-sm text-gray-300 flex-1" id="url-<%= endpoint.name.toLowerCase() %>"><%= endpoint.path %></code>
                                <button onclick="copyToClipboard('url-<%= endpoint.name.toLowerCase() %>')" class="text-gray-400 hover:text-rgb-accent">
                                    <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z" />
                                    </svg>
                                </button>
                            </div>
                        </div>
                        <p class="text-sm text-gray-400">
                            <%= endpoint.description %>
                        </p>
                        <% if (endpoint.params && endpoint.params.length> 0) { %>
                            <div class="text-xs text-gray-500">
                                <p class="font-medium">Parameter:</p>
                                <% endpoint.params.forEach(param=> { %>
                                    <p>
                                        <%= param.name %> (required) - <%= param.description %>
                                    </p>
                                    <% }); %>
                            </div>
                        <% } %>

                        <!-- Example Response -->
                        <div class="mt-4">
                            <p class="text-xs font-medium text-gray-500 mb-2">Contoh Response:</p>
                            <pre class="bg-rgb-primary p-3 rounded-lg text-xs overflow-x-auto"><code>{
  "status": "success",
  "data": {
    // Response data sesuai endpoint
  }
}</code></pre>
                        </div>

                        <!-- Usage Examples -->
                        <div class="mt-4 space-y-3">
                            <p class="text-xs font-medium text-gray-500">Contoh Penggunaan:</p>
                            
                            <!-- cURL -->
                            <div>
                                <p class="text-xs text-gray-400 mb-1">cURL:</p>
                                <pre class="bg-rgb-primary p-2 rounded-lg text-xs overflow-x-auto"><code>curl -X GET "<%= endpoint.path %>"</code></pre>
                            </div>

                            <!-- Fetch -->
                            <div>
                                <p class="text-xs text-gray-400 mb-1">Fetch:</p>
                                <pre class="bg-rgb-primary p-2 rounded-lg text-xs overflow-x-auto"><code>fetch("<%= endpoint.path %>")
  .then(response => response.json())
  .then(data => console.log(data));</code></pre>
                            </div>

                            <!-- Axios -->
                            <div>
                                <p class="text-xs text-gray-400 mb-1">Axios:</p>
                                <pre class="bg-rgb-primary p-2 rounded-lg text-xs overflow-x-auto"><code>axios.get("<%= endpoint.path %>")
  .then(response => console.log(response.data));</code></pre>
                            </div>
                        </div>
                    </div>
                </div>
                <% }); %>
        </div>
    </main>

    <!-- Footer -->
    <footer class="bg-rgb-secondary mt-12">
        <div class="container mx-auto px-4 py-6 text-center text-gray-400">
            <p>&copy; <%= new Date().getFullYear() %> API Documentation. All rights reserved.</p>
        </div>
    </footer>

    <!-- Scripts -->
    <script>
        function filterEndpoints() {
            const input = document.getElementById('searchInput');
            const filter = input.value.toLowerCase();
            const container = document.getElementById('endpointsContainer');
            const cards = container.getElementsByClassName('endpoint-card');

            for (let card of cards) {
                const title = card.getElementsByTagName('h3')[0];
                const txtValue = title.textContent || title.innerText;
                if (txtValue.toLowerCase().indexOf(filter) > -1) {
                    card.style.display = "";
                } else {
                    card.style.display = "none";
                }
            }
        }

        function copyToClipboard(elementId) {
            const element = document.getElementById(elementId);
            const text = element.textContent;
            navigator.clipboard.writeText(text).then(() => {
                // Optional: Add visual feedback
                element.classList.add('text-rgb-accent');
                setTimeout(() => {
                    element.classList.remove('text-rgb-accent');
                }, 500);
            });
        }
    </script>
</body>

</html>