<!DOCTYPE html>
<html lang="id">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>
        <%= title %> | Kanata Web
    </title>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap"
        rel="stylesheet">
    <script src="https://cdn.tailwindcss.com"></script>
    <script>
        tailwind.config = {
            theme: {
                extend: {
                    colors: {
                        'rgb-primary': '#2E3440',
                        'rgb-secondary': '#3B4252',
                        'rgb-accent': '#88C0D0',
                        'rgb-text': '#ECEFF4'
                    },
                    fontFamily: {
                        'poppins': ['Poppins', 'sans-serif']
                    }
                },
            },

        } 
    </script>
</head>

<body class="bg-rgb-primary text-rgb-text font-poppins min-h-screen">
    <!-- Header -->
    <header class="bg-rgb-secondary shadow-lg">
        <div class="container mx-auto px-4 py-6">
            <nav class="flex justify-between items-center">
                <a href="/" class="text-2xl font-bold text-rgb-accent">Kanata API</a>
                <div class="flex space-x-4">
                    <a href="/dl"
                        class="text-rgb-text hover:text-rgb-accent transition-colors">
                        Downloader
                    </a>
                    <a href="https://github.com/idlanyor/kanata-reborn"
                        class="text-rgb-text hover:text-rgb-accent transition-colors">
                        GitHub
                    </a>
                </div>
            </nav>
        </div>
    </header>

    <!-- Main Content -->
    <main class="container mx-auto px-4 py-8">
        <!-- Hero Section -->
        <div class="text-center mb-12 space-y-4">
            <h1
                class="text-4xl font-bold bg-gradient-to-r from-blue-500 via-purple-500 to-pink-500 bg-clip-text text-transparent">
                API Scraper by Roy
            </h1>
            <p class="text-gray-400">Dokumentasi API untuk berbagai layanan scraping</p>
        </div>

        <!-- Search Bar -->
        <div class="mb-8">
            <div class="relative max-w-xl mx-auto">
                <input type="text" placeholder="Cari endpoint..."
                    class="w-full px-4 py-2 bg-rgb-secondary rounded-lg focus:outline-none focus:ring-2 focus:ring-rgb-accent text-rgb-text"
                    id="searchInput" onkeyup="filterEndpoints()">
                <div class="absolute right-3 top-2.5 text-gray-400">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24"
                        stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                            d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
                    </svg>
                </div>
            </div>
        </div>

        <!-- Endpoints Grid -->
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6" id="endpointsContainer">
            <% endpoints.forEach(endpoint=> { %>
                <div x-data="{ open: false }"bu
                    class="endpoint-card bg-rgb-secondary p-6 rounded-xl border border-gray-700 hover:shadow-xl transition-all duration-300 hover:scale-[1.02] hover:bg-opacity-90">
                    <div class="flex items-center justify-between cursor-pointer group" @click="open = !open">
                        <div class="flex items-center space-x-4">
                            <div class="w-12 h-12 rounded-lg <%= endpoint.bgColor %> flex items-center justify-center shadow-lg transform group-hover:scale-110 transition-transform">
                                <%- endpoint.icon %>
                            </div>
                            <h3 class="text-xl font-bold text-rgb-accent">
                                <%= endpoint.name %>
                            </h3>
                        </div>
                        <svg xmlns="http://www.w3.org/2000/svg" 
                            class="h-6 w-6 text-rgb-accent transition-transform duration-300"
                            :class="{'rotate-180': open}" 
                            fill="none" 
                            viewBox="0 0 24 24" 
                            stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" />
                        </svg>
                    </div>

                    <div x-show="open" 
                        x-transition:enter="transition ease-out duration-200"
                        x-transition:enter-start="opacity-0 transform -translate-y-4"
                        x-transition:enter-end="opacity-100 transform translate-y-0"
                        class="mt-6 space-y-4 border-t border-gray-700 pt-4">
                        <div class="flex items-center space-x-3">
                            <span class="px-3 py-1 bg-green-500 text-white text-sm font-medium rounded-full shadow-sm">GET</span>
                            <div class="flex-1 flex items-center bg-rgb-primary rounded-lg p-3">
                                <code class="text-sm text-rgb-accent flex-1 font-mono"
                                    id="url-<%= endpoint.name.toLowerCase() %>"><%= endpoint.path %></code>
                                <button onclick="copyToClipboard('url-<%= endpoint.name.toLowerCase() %>', this)"
                                    class="text-gray-400 hover:text-rgb-accent transition-colors p-2 rounded-full hover:bg-rgb-secondary">
                                    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 copy-icon" fill="none"
                                        viewBox="0 0 24 24" stroke="currentColor">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                            d="M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z" />
                                    </svg>
                                </button>
                            </div>
                        </div>
                        <p class="text-sm text-gray-300 leading-relaxed">
                            <%= endpoint.description %>
                        </p>
                        <% if (endpoint.params && endpoint.params.length> 0) { %>
                            <div class="bg-rgb-primary rounded-lg p-4 space-y-2">
                                <p class="font-medium text-rgb-accent">Parameter yang dibutuhkan:</p>
                                <% endpoint.params.forEach(param=> { %>
                                    <div class="flex items-start space-x-2 text-sm">
                                        <span class="text-pink-400 font-mono"><%= param.name %></span>
                                        <span class="text-gray-400">-</span>
                                        <span class="text-gray-300"><%= param.description %></span>
                                    </div>
                                <% }); %>
                            </div>
                        <% } %>
                    </div>
                </div>
            <% }); %>
        </div>


    </main>

    <!-- Footer -->
    <footer class="bg-rgb-secondary mt-12">
        <div class="container mx-auto px-4 py-6 text-center text-gray-400">
            <p>&copy; <%= new Date().getFullYear() %> Kanata API. All rights reserved.</p>
        </div>
    </footer>

    <!-- Scripts -->
    <script src="https://cdn.jsdelivr.net/npm/alpinejs@3.x.x/dist/cdn.min.js" defer></script>

    <script>
        function filterEndpoints() {
            const input = document.getElementById('searchInput');
            const filter = input.value.toLowerCase();
            const container = document.getElementById('endpointsContainer');
            const cards = container.getElementsByClassName('endpoint-card');

            for (let card of cards) {
                const title = card.getElementsByTagName('h3')[0];
                const txtValue = title.textContent || title.innerText;
                if (txtValue.toLowerCase().indexOf(filter) > -1) {
                    card.style.display = "";
                } else {
                    card.style.display = "none";
                }
            }
        }

        function copyToClipboard(elementId) {
            const element = document.getElementById(elementId);
            const text = element.textContent;
            navigator.clipboard.writeText(text).then(() => {
                // Optional: Add visual feedback
                element.classList.add('text-rgb-accent');
                setTimeout(() => {
                    element.classList.remove('text-rgb-accent');
                }, 500);
            });
        }
    </script>
</body>

</html>